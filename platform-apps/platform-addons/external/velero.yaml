component: velero
project: platform-addons
useYamlFile: false
useHelmRepo: true
repoURL: https://vmware-tanzu.github.io/helm-charts
ChartName: velero
version: 10.1.0
autoSync: true
namespace: velero
release: velero
valuesObject:
  metrics:
    enabled: true
    service:
      type: ClusterIP
    serviceMonitor:
      enabled: true
      namespace: monitoring
      additionalLabels:
        release: kube-prometheus-stack
    scrapeInterval: 15s
  kubectl:
    image:
      repository: docker.io/bitnamilegacy/kubectl
  initContainers:
  - name: velero-plugin-for-aws
    image: velero/velero-plugin-for-aws:v1.12.1
    imagePullPolicy: IfNotPresent
    volumeMounts:
    - mountPath: /target
      name: plugins
  - name: velero-plugin-for-microsoft-azure
    image: velero/velero-plugin-for-microsoft-azure:v1.11.0
    imagePullPolicy: IfNotPresent
    volumeMounts:
    - mountPath: /target
      name: plugins
  credentials:
    existingSecret: cloud-credentials
  resources:
    limits:
      cpu: '3'
      memory: 10Gi
    requests:
      cpu: 500m
      memory: 128Mi
  deployNodeAgent: true
  nodeAgent:
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 5Gi
  configuration:
    features: EnableCSI
    repositoryMaintenanceJob:
      latestJobsCount: 0
    defaultRepoMaintainFrequency: 12h
    backupStorageLocation:
    - name: scheduled-all-namespaces
      provider: azure
      bucket: velero
      prefix: colo/dev-main/scheduled/all-namespaces-fs
      config:
        useAAD: 'true'
        resourceGroup: armada-dev
        storageAccount: armadagalleonbackups
    - name: scheduled-all-namespaces-fs
      provider: azure
      bucket: velero
      prefix: colo/dev-main/scheduled/all-namespaces-fs
      config:
        useAAD: 'true'
        resourceGroup: armada-dev
        storageAccount: armadagalleonbackups
    volumeSnapshotLocation: [
      ]
  schedules:
    all-namespaces-fs:
      schedule: 0 7 * * *
      skipImmediately: false
      template:
        csiSnapshotTimeout: 1h0m0s
        defaultVolumesToFsBackup: true
        hooks: {
          }
        includedNamespaces:
        - '*'
        itemOperationTimeout: 12h0m0s
        snapshotMoveData: false
        snapshotVolumes: false
        storageLocation: cloud
        ttl: 720h
        uploaderConfig:
          parallelFilesUpload: 12
      useOwnerReferencesInBackup: false
      paused: false
